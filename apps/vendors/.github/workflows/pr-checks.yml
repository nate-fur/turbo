name: Pull Request Checks

on:
  pull_request:
    branches: [main, staging]
    types: [opened, synchronize, reopened]

jobs:
  lint-and-type-check:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Use Node.js 22.18.0
        uses: actions/setup-node@v4
        with:
          node-version: 22.18.0
          cache: yarn

      - name: Cache Next.js build
        uses: actions/cache@v4
        with:
          path: |
            .next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/yarn.lock') }}-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/yarn.lock') }}-

      - name: Install dependencies
        run: |
          yarn install --frozen-lockfile --production=false
          echo "‚úÖ Dependencies installed"

      - name: Run ESLint
        id: eslint
        run: |
          echo "üîç Running ESLint..."
          yarn lint
          echo "‚úÖ ESLint passed"

      - name: Type check with TypeScript
        id: typescript
        run: |
          echo "üîç Running TypeScript type checking..."
          yarn check:types
          echo "‚úÖ TypeScript type checking passed"

      - name: Build Next.js application
        id: build
        run: |
          echo "üîç Building Next.js application..."
          yarn build
          echo "‚úÖ Build completed successfully"

      - name: Verify build artifacts
        run: |
          if [ -d ".next" ]; then
            echo "‚úÖ .next directory created successfully"
            ls -lah .next
          else
            echo "‚ùå .next directory not found"
            exit 1
          fi

      - name: Create summary
        if: always()
        run: |
          echo "## Pull Request Checks Summary" >> $GITHUB_STEP_SUMMARY
          echo "- **ESLint**: ${{ steps.eslint.outcome == 'success' && '‚úÖ Passed' || '‚ùå Failed' }}" >> $GITHUB_STEP_SUMMARY
          echo "- **TypeScript**: ${{ steps.typescript.outcome == 'success' && '‚úÖ Passed' || '‚ùå Failed' }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Build**: ${{ steps.build.outcome == 'success' && '‚úÖ Passed' || '‚ùå Failed' }}" >> $GITHUB_STEP_SUMMARY

      - name: Comment on PR (Success)
        if: steps.eslint.outcome == 'success' && steps.typescript.outcome == 'success' && steps.build.outcome == 'success'
        uses: actions/github-script@v7
        with:
          script: |
            const comment = `## ‚úÖ Pull Request Checks Passed!

            All code quality checks have completed successfully:

            - **ESLint**: ‚úÖ Passed - No linting issues found
            - **TypeScript**: ‚úÖ Passed - No type errors found
            - **Build**: ‚úÖ Passed - Application builds successfully

            Your code is ready for review! üöÄ

            <sub>Automated check completed at ${new Date().toLocaleString()}</sub>`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });

      - name: Comment on PR (Failure)
        if: failure() && (steps.eslint.outcome == 'failure' || steps.typescript.outcome == 'failure' || steps.build.outcome == 'failure')
        uses: actions/github-script@v7
        with:
          script: |
            const eslintStatus = '${{ steps.eslint.outcome }}' === 'success' ? '‚úÖ Passed' : '‚ùå Failed';
            const typescriptStatus = '${{ steps.typescript.outcome }}' === 'success' ? '‚úÖ Passed' : '‚ùå Failed';
            const buildStatus = '${{ steps.build.outcome }}' === 'success' ? '‚úÖ Passed' : '‚ùå Failed';

            const comment = `## ‚ùå Pull Request Checks Failed

            Some code quality checks have failed. Please fix the issues before merging:

            - **ESLint**: ${eslintStatus}
            - **TypeScript**: ${typescriptStatus}
            - **Build**: ${buildStatus}

            Please review the workflow logs for detailed error information and fix the issues.

            <sub>Automated check completed at ${new Date().toLocaleString()}</sub>`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
